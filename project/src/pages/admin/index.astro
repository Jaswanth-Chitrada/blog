---
import Layout from '../../layouts/Layout.astro';
import { verifyToken } from '../../lib/auth';
import { storage } from '../../lib/storage';
import { formatDate } from '../../lib/utils';

const token = Astro.cookies.get('token')?.value;
const isAuthenticated = token && await verifyToken(token);

if (!isAuthenticated) {
  return Astro.redirect('/admin/login');
}

const posts = await storage.getAllPosts();
---

<Layout title="Admin Dashboard - VLSI Engineering Blog">
  <main class="max-w-7xl mx-auto px-4 py-8">
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
          Admin Dashboard
        </h1>
        <a
          href="/admin/new-post"
          class="inline-block bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700"
        >
          Create New Post
        </a>
      </div>

      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead class="bg-gray-50 dark:bg-gray-700">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Title</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Published</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
            {posts.map((post) => (
              <tr>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900 dark:text-white">{post.title}</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-gray-500 dark:text-gray-300">
                    {formatDate(post.publishedAt)}
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                  <a href={`/admin/edit/${post.id}`} class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">Edit</a>
                  <button
                    data-post-id={post.id}
                    class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 delete-post"
                  >
                    Delete
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.querySelectorAll('.delete-post').forEach(button => {
    button.addEventListener('click', async (e) => {
      const postId = (e.target as HTMLButtonElement).dataset.postId;
      if (!postId) return;
      
      if (confirm('Are you sure you want to delete this post?')) {
        const response = await fetch(`/api/posts/${postId}`, {
          method: 'DELETE',
        });
        
        if (response.ok) {
          window.location.reload();
        }
      }
    });
  });
</script>